.. _l-feuille-route-2025:

=========================================
2025-03-01 : feuille de route 2025 - mars
=========================================

site web : `sdpython.github.io <https://sdpython.github.io/>`_

`Apprendre la programmation avec Python
<https://sdpython.github.io/doc/teachpyx/dev/>`_

Séance 1 (31/1)
===============

Un jeu de données :

* `Demandes de valeurs foncières
  <https://www.data.gouv.fr/fr/datasets/demandes-de-valeurs-foncieres/>`_

*Quatre thèmes*

* Deux types de problèmes : régression, classifications
* Problèmes dérivés : ranking, clustering, série temporelles
* Calculs, puissances de calculs, CUDA, CPU
* Environnement de travail, coder avec un LLM en local,
  :ref:`l-2025-01-31-local-llm`, avenir du datascientiste

*Autres notes*

* :ref:`l-ml-rappel`
* programmation (python :epkg:`numpy`, :epkg:`pandas`, :epkg:`matplotlib`, :epkg:`jupyter`)
* :ref:`Tests unitaires <nbl-practice-py-base-tests_unitaires>`, package python
* `SQL <https://en.wikipedia.org/wiki/SQL>`_
* `CPU <https://en.wikipedia.org/wiki/Central_processing_unit>`_,
  `CUDA <https://en.wikipedia.org/wiki/CUDA>`_
* machine learning, :epkg:`scikit-learn`, :epkg:`pytorch`
* `comparaison torch/scikit-learn <https://sdpython.github.io/doc/experimental-experiment/dev/auto_examples/plot_torch_linreg.html>`_
* :ref:`l-regclass`
* évaluation, :ref:`ROC <l-ml-plot-roc>`, :math:`R^2`
* ranking, clustering
* `ChatGPT <https://chat.openai.com/>`_,
  `LLM <https://en.wikipedia.org/wiki/Large_language_model>`_,
  (Large Language Model), SLLM (Small LLM)
* Coder avec un LLM en local : :ref:`l-2025-01-31-local-llm`
* Notebooks, Visual Studio Code

Séance 2 (7/2)
==============

* arbre de régression, de classification
  :ref:`RandomForest, Overfitting <nbl-practice-ml-ml_a_tree_overfitting>`
* Gradient Boosting, :ref:`Gradient Boosting et Learning Rate avec les Random Forest <nbl-practice-ml-gradient_boosting>`
* Régression linéaire et contraintes sur les coefficients,
  `Ridge <https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.Ridge.html>`_,
  `Lasso <https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.Lasso.html>`_,
  `ElasticNet <https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.ElasticNet.html>`_,
  :ref:`Ridge, Lasso, mathématiques <nbl-practice-ml-ridge_lasso>`
* paramètres et hyper paramètres, :ref:`Sélection des hyper-paramètres <nbl-practice-ml-winesr_knn_hyper>`,
  :class:`sklearn.model_selection.GridSearchCV`
* `Data challenge - Algorithme machine learning qui permet de prédire la gravité d’un accident de la rout
  <https://www.data.gouv.fr/fr/reuses/data-challenge-algorithme-machine-learning-qui-permet-de-predire-la-gravite-dun-accident-de-la-route/>`_

Séance 3 (14/2)
===============

*un peu plus de code*

* pipelines
* créer son propre estimateur
* tests unitaires

Séance 4 (21/2)
===============

* prétraitement
* anomalie
* cartes

Séance 5 (6/3)
==============

* série temporelles
* analyses de survie
* DeepAR
* temps réel

